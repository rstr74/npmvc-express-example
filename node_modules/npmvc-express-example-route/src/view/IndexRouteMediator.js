var fs = require('fs');
var path = require('path');

module.exports = function(include, puremvc) {

	puremvc.include("IndexRoute", __dirname + "/route");

	var ExpressMediator = npmvc.view.mediator.ExpressMediator;

	/**
	 * @class npmvc.view.mediator.IndexRouteMediator
	 * @extends puremvc.Mediator
	 * @imports
	 */
	puremvc.define(
		// CLASS INFO
		{
			name: 'npmvc.view.mediator.IndexRouteMediator',
			parent: puremvc.Mediator
		},

		// INSTANCE MEMBERS
		{
			/** @override */
			onRegister: function() {
				this.expressMediator = this.facade.retrieveMediator(npmvc.view.mediator.ExpressMediator.NAME);
			},
			/** @override */
			listNotificationInterests: function() {
				return [npmvc.view.mediator.ExpressMediator.EXPRESS_SETUP_ROUTES, npmvc.view.mediator.ExpressMediator.EXPRESS_READY]
			},
			/** @override */
			handleNotification: function(note) {
				switch (note.getName()) {
					case npmvc.view.mediator.ExpressMediator.EXPRESS_SETUP_ROUTES:
					
						// setup routes here...
						var indexRoute = new my.custom.IndexRoute();
						this.facade.registerProxy(indexRoute);
					break;
					case npmvc.view.mediator.ExpressMediator.EXPRESS_READY:

					break;
				}
			},
			/**
			 * [init description]
			 * @return {[type]} [description]
			 */
			init: function(config) {
				this.config = config;
			}
		},

		// STATIC MEMBERS
		{
			/**
			 * @static
			 * @type {string}
			 */
			NAME: 'npmvc.view.mediator.IndexRouteMediator',
		});
}